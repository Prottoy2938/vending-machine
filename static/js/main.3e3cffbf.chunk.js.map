{"version":3,"sources":["Soda.png","VendingMachine.png","Chips.png","Message.js","VendingMachine.js","Sardines.js","Soda.js","Chips.js","Missing.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Message","className","this","props","children","Component","VendingMachine","style","backgroundImage","vendingMachineImg","to","Sardines","Soda","src","sodaImg","alt","Chips","state","bags","handleClick","bind","x","window","innerWidth","Math","random","y","innerHeight","setState","prevState","map","bag","i","key","chipsImg","top","left","length","onClick","Missing","NavBar","exact","activeClassName","App","console","log","path","render","component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e3cffbf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Soda.7746d7d5.png\";","module.exports = __webpack_public_path__ + \"static/media/VendingMachine.369bea35.png\";","module.exports = __webpack_public_path__ + \"static/media/Chips.0e21446e.png\";","import React, { Component } from \"react\";\r\nimport \"./Message.css\";\r\nexport default class Message extends Component {\r\n  render() {\r\n    return <div className=\"Message\">{this.props.children}</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./VendingMachine.css\";\nimport vendingMachineImg from \"./VendingMachine.png\";\nimport Message from \"./Message\";\n\nclass VendingMachine extends Component {\n  render() {\n    return (\n      <div\n        className=\"VendingMachine\"\n        style={{ backgroundImage: `url(${vendingMachineImg})` }}\n      >\n        <Message>\n          <h1>hello i am a vending machine. what would you like to eat?</h1>\n        </Message>\n        <Message>\n          <Link to=\"/soda\">Soda</Link>\n\n          <Link to=\"/chips\">Chips</Link>\n\n          <Link to=\"/sardines\">Sardines</Link>\n        </Message>\n      </div>\n    );\n  }\n}\n\nexport default VendingMachine;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Sardines.css\";\nimport Message from \"./Message\";\n\nclass Sardines extends Component {\n  render() {\n    return (\n      <div\n        className=\"Sardines\"\n        style={{\n          backgroundImage:\n            \"url(https://media.giphy.com/media/tVk4w6EZ7eGNq/giphy.gif)\"\n        }}\n      >\n        <Message>\n          <h1>you don't eat the sardines. the sardines, they eat you!</h1>\n          <Link to=\"/\">Go Back</Link>\n        </Message>\n      </div>\n    );\n  }\n}\n\nexport default Sardines;\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport sodaImg from \"./Soda.png\";\nimport \"./Soda.css\";\nimport Message from \"./Message\";\n\nclass Soda extends Component {\n  render() {\n    return (\n      <div className=\"Soda\">\n        <img src={sodaImg} alt=\"coca cola can\" />\n\n        <Message>\n          <h1>SODAAAAA IS MY FAVORITE</h1>\n          <h3>But now I drink sparkling water instead</h3>\n          <p>(I still miss Soda)</p>\n\n          <Link to=\"/\">Go Back</Link>\n        </Message>\n        <img src={sodaImg} alt=\"coca cola can\" />\n      </div>\n    );\n  }\n}\n\nexport default Soda;\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport chipsImg from \"./Chips.png\";\nimport Message from \"./Message\";\n\nimport \"./Chips.css\";\n\nclass Chips extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bags: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const x = window.innerWidth * Math.random();\n    const y = window.innerHeight * Math.random();\n    this.setState(prevState => ({\n      bags: [...prevState.bags, { x, y }]\n    }));\n  }\n\n  render() {\n    const bags = this.state.bags.map((bag, i) => (\n      <img\n        key={i}\n        src={chipsImg}\n        className=\"bag\"\n        style={{ top: `${bag.y}px`, left: `${bag.x}px` }}\n        alt=\"bag of lay's chips\"\n      />\n    ));\n    return (\n      <div className=\"Chips\">\n        <Message>\n          <h1>bags eaten: {this.state.bags.length}</h1>\n          <button onClick={this.handleClick}>nom nom nom</button>\n          <h1>\n            <Link to=\"/\">Go Back</Link>\n          </h1>\n\n          {bags}\n        </Message>\n      </div>\n    );\n  }\n}\n\nexport default Chips;\n","import React, { Component } from \"react\";\r\n\r\nexport default class Missing extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Opps! Page Not Found!</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Navbar\">\r\n        <NavLink exact to=\"/vending-machine\" activeClassName=\"Navbar-active\">\r\n          Home\r\n        </NavLink>\r\n        <NavLink exact to=\"/soda\" activeClassName=\"Navbar-active\">\r\n          Soda\r\n        </NavLink>\r\n        <NavLink exact to=\"/sardines\" activeClassName=\"Navbar-active\">\r\n          Sardine\r\n        </NavLink>\r\n        <NavLink exact to=\"/chips\" activeClassName=\"Navbar-active\">\r\n          Chips\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport VendingMachine from \"./VendingMachine\";\nimport Sardines from \"./Sardines\";\nimport Soda from \"./Soda\";\nimport Chips from \"./Chips\";\nimport Missing from \"./Missing\";\nimport Navbar from \"./NavBar\";\nfunction App() {\n  console.log(\n    \"Vending Machine icon icon by Icons8\",\n    \"https://icons8.com/icons/set/vending-machine\"\n  );\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" render={() => <VendingMachine />} />\n\n        <Route\n          exact\n          path=\"/vending-machine\"\n          render={() => <VendingMachine />}\n        />\n        <Route exact path=\"/soda\" render={() => <Soda />} />\n\n        <Route path=\"/chips\" render={() => <Chips />} />\n        <Route path=\"/sardines\" render={() => <Sardines />} />\n\n        <Route component={Missing} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}